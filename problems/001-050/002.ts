/**
 * Problem 2
 * https://projecteuler.net/problem=2
 *
 *
 * Each new term in the Fibonacci sequence is generated by adding the previous
 * two terms. By starting with 1 and 2, the first 10 terms will be:
 *
 * 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
 *
 * By considering the terms in the Fibonacci sequence whose values do not exceed
 * four million, find the sum of the even-valued terms.
 */
/**
 * Recursion will kill you.
 */
import {List} from "immutable";

type TwoNumbers = [number, number];

const top: number = 4000000;

function fibonacciRace ([last, current]: TwoNumbers): TwoNumbers {
	const next = last + current;
	return [current, next];
}

function solution (): number {
	let [last, current] = [1, 2];
	let odds = List<number>([2]);
	for (;;) {
		[last, current] = fibonacciRace([last, current]);
		if (current > top) { break; }
		if (current % 2 === 0) { odds = odds.push(current); }
	}
	return odds.update<number>(list => list.reduce((sum, curr) => sum + curr, 0));
}

console.log(solution());
